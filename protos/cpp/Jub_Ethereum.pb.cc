// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: Jub_Ethereum.proto

#include "Jub_Ethereum.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// This is a temporary google only hack
#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
#include "third_party/protobuf/version.h"
#endif
// @@protoc_insertion_point(includes)
namespace JUB {
namespace Proto {
namespace Ethereum {
class ContextCfgETHDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ContextCfgETH>
      _instance;
} _ContextCfgETH_default_instance_;
class Erc20BuilderDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Erc20Builder>
      _instance;
} _Erc20Builder_default_instance_;
class TransactionETHDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<TransactionETH>
      _instance;
} _TransactionETH_default_instance_;
}  // namespace Ethereum
}  // namespace Proto
}  // namespace JUB
namespace protobuf_Jub_5fEthereum_2eproto {
void InitDefaultsContextCfgETHImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::JUB::Proto::Ethereum::_ContextCfgETH_default_instance_;
    new (ptr) ::JUB::Proto::Ethereum::ContextCfgETH();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::JUB::Proto::Ethereum::ContextCfgETH::InitAsDefaultInstance();
}

void InitDefaultsContextCfgETH() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsContextCfgETHImpl);
}

void InitDefaultsErc20BuilderImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::JUB::Proto::Ethereum::_Erc20Builder_default_instance_;
    new (ptr) ::JUB::Proto::Ethereum::Erc20Builder();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::JUB::Proto::Ethereum::Erc20Builder::InitAsDefaultInstance();
}

void InitDefaultsErc20Builder() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsErc20BuilderImpl);
}

void InitDefaultsTransactionETHImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_Jub_5fCommon_2eproto::InitDefaultsBip32Path();
  {
    void* ptr = &::JUB::Proto::Ethereum::_TransactionETH_default_instance_;
    new (ptr) ::JUB::Proto::Ethereum::TransactionETH();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::JUB::Proto::Ethereum::TransactionETH::InitAsDefaultInstance();
}

void InitDefaultsTransactionETH() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsTransactionETHImpl);
}

::google::protobuf::Metadata file_level_metadata[3];
const ::google::protobuf::EnumDescriptor* file_level_enum_descriptors[1];

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::JUB::Proto::Ethereum::ContextCfgETH, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::JUB::Proto::Ethereum::ContextCfgETH, main_path_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::JUB::Proto::Ethereum::ContextCfgETH, chainid_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::JUB::Proto::Ethereum::Erc20Builder, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::JUB::Proto::Ethereum::Erc20Builder, tokento_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::JUB::Proto::Ethereum::Erc20Builder, tokenvalueinwei_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::JUB::Proto::Ethereum::TransactionETH, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::JUB::Proto::Ethereum::TransactionETH, path_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::JUB::Proto::Ethereum::TransactionETH, nonce_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::JUB::Proto::Ethereum::TransactionETH, gaslimit_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::JUB::Proto::Ethereum::TransactionETH, gaspriceinwei_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::JUB::Proto::Ethereum::TransactionETH, to_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::JUB::Proto::Ethereum::TransactionETH, valueinwei_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::JUB::Proto::Ethereum::TransactionETH, input_),
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::JUB::Proto::Ethereum::ContextCfgETH)},
  { 7, -1, sizeof(::JUB::Proto::Ethereum::Erc20Builder)},
  { 14, -1, sizeof(::JUB::Proto::Ethereum::TransactionETH)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::JUB::Proto::Ethereum::_ContextCfgETH_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::JUB::Proto::Ethereum::_Erc20Builder_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::JUB::Proto::Ethereum::_TransactionETH_default_instance_),
};

void protobuf_AssignDescriptors() {
  AddDescriptors();
  ::google::protobuf::MessageFactory* factory = NULL;
  AssignDescriptors(
      "Jub_Ethereum.proto", schemas, file_default_instances, TableStruct::offsets, factory,
      file_level_metadata, file_level_enum_descriptors, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_PROTOBUF_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 3);
}

void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n\022Jub_Ethereum.proto\022\022JUB.Proto.Ethereum"
      "\032\020Jub_Common.proto\"3\n\rContextCfgETH\022\021\n\tm"
      "ain_path\030\001 \001(\t\022\017\n\007chainID\030\002 \001(\r\"8\n\014Erc20"
      "Builder\022\017\n\007tokenTo\030\001 \001(\t\022\027\n\017tokenValueIn"
      "Wei\030\002 \001(\t\"\242\001\n\016TransactionETH\022)\n\004path\030\001 \001"
      "(\0132\033.JUB.Proto.Common.Bip32Path\022\r\n\005nonce"
      "\030\002 \001(\r\022\020\n\010gasLimit\030\003 \001(\r\022\025\n\rgasPriceInWe"
      "i\030\004 \001(\t\022\n\n\002to\030\005 \001(\t\022\022\n\nvalueInWei\030\006 \001(\t\022"
      "\r\n\005input\030\007 \001(\t*$\n\017ENUM_PUB_FORMAT\022\007\n\003HEX"
      "\020\000\022\010\n\004XPUB\020\001B8\n\025com.jubiter.jni.protoB\016E"
      "thereumProtos\242\002\016EthereumProtosb\006proto3"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 438);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "Jub_Ethereum.proto", &protobuf_RegisterTypes);
  ::protobuf_Jub_5fCommon_2eproto::AddDescriptors();
}

void AddDescriptors() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;
}  // namespace protobuf_Jub_5fEthereum_2eproto
namespace JUB {
namespace Proto {
namespace Ethereum {
const ::google::protobuf::EnumDescriptor* ENUM_PUB_FORMAT_descriptor() {
  protobuf_Jub_5fEthereum_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_Jub_5fEthereum_2eproto::file_level_enum_descriptors[0];
}
bool ENUM_PUB_FORMAT_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
      return true;
    default:
      return false;
  }
}


// ===================================================================

void ContextCfgETH::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ContextCfgETH::kMainPathFieldNumber;
const int ContextCfgETH::kChainIDFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ContextCfgETH::ContextCfgETH()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_Jub_5fEthereum_2eproto::InitDefaultsContextCfgETH();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:JUB.Proto.Ethereum.ContextCfgETH)
}
ContextCfgETH::ContextCfgETH(const ContextCfgETH& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  main_path_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.main_path().size() > 0) {
    main_path_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.main_path_);
  }
  chainid_ = from.chainid_;
  // @@protoc_insertion_point(copy_constructor:JUB.Proto.Ethereum.ContextCfgETH)
}

void ContextCfgETH::SharedCtor() {
  main_path_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  chainid_ = 0u;
  _cached_size_ = 0;
}

ContextCfgETH::~ContextCfgETH() {
  // @@protoc_insertion_point(destructor:JUB.Proto.Ethereum.ContextCfgETH)
  SharedDtor();
}

void ContextCfgETH::SharedDtor() {
  main_path_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void ContextCfgETH::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ContextCfgETH::descriptor() {
  ::protobuf_Jub_5fEthereum_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Jub_5fEthereum_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ContextCfgETH& ContextCfgETH::default_instance() {
  ::protobuf_Jub_5fEthereum_2eproto::InitDefaultsContextCfgETH();
  return *internal_default_instance();
}

ContextCfgETH* ContextCfgETH::New(::google::protobuf::Arena* arena) const {
  ContextCfgETH* n = new ContextCfgETH;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ContextCfgETH::Clear() {
// @@protoc_insertion_point(message_clear_start:JUB.Proto.Ethereum.ContextCfgETH)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  main_path_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  chainid_ = 0u;
  _internal_metadata_.Clear();
}

bool ContextCfgETH::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:JUB.Proto.Ethereum.ContextCfgETH)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string main_path = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_main_path()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->main_path().data(), static_cast<int>(this->main_path().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "JUB.Proto.Ethereum.ContextCfgETH.main_path"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 chainID = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &chainid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:JUB.Proto.Ethereum.ContextCfgETH)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:JUB.Proto.Ethereum.ContextCfgETH)
  return false;
#undef DO_
}

void ContextCfgETH::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:JUB.Proto.Ethereum.ContextCfgETH)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string main_path = 1;
  if (this->main_path().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->main_path().data(), static_cast<int>(this->main_path().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "JUB.Proto.Ethereum.ContextCfgETH.main_path");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->main_path(), output);
  }

  // uint32 chainID = 2;
  if (this->chainid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->chainid(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:JUB.Proto.Ethereum.ContextCfgETH)
}

::google::protobuf::uint8* ContextCfgETH::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:JUB.Proto.Ethereum.ContextCfgETH)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string main_path = 1;
  if (this->main_path().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->main_path().data(), static_cast<int>(this->main_path().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "JUB.Proto.Ethereum.ContextCfgETH.main_path");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->main_path(), target);
  }

  // uint32 chainID = 2;
  if (this->chainid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->chainid(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:JUB.Proto.Ethereum.ContextCfgETH)
  return target;
}

size_t ContextCfgETH::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:JUB.Proto.Ethereum.ContextCfgETH)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string main_path = 1;
  if (this->main_path().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->main_path());
  }

  // uint32 chainID = 2;
  if (this->chainid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->chainid());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ContextCfgETH::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:JUB.Proto.Ethereum.ContextCfgETH)
  GOOGLE_DCHECK_NE(&from, this);
  const ContextCfgETH* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ContextCfgETH>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:JUB.Proto.Ethereum.ContextCfgETH)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:JUB.Proto.Ethereum.ContextCfgETH)
    MergeFrom(*source);
  }
}

void ContextCfgETH::MergeFrom(const ContextCfgETH& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:JUB.Proto.Ethereum.ContextCfgETH)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.main_path().size() > 0) {

    main_path_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.main_path_);
  }
  if (from.chainid() != 0) {
    set_chainid(from.chainid());
  }
}

void ContextCfgETH::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:JUB.Proto.Ethereum.ContextCfgETH)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ContextCfgETH::CopyFrom(const ContextCfgETH& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:JUB.Proto.Ethereum.ContextCfgETH)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ContextCfgETH::IsInitialized() const {
  return true;
}

void ContextCfgETH::Swap(ContextCfgETH* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ContextCfgETH::InternalSwap(ContextCfgETH* other) {
  using std::swap;
  main_path_.Swap(&other->main_path_);
  swap(chainid_, other->chainid_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ContextCfgETH::GetMetadata() const {
  protobuf_Jub_5fEthereum_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Jub_5fEthereum_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Erc20Builder::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Erc20Builder::kTokenToFieldNumber;
const int Erc20Builder::kTokenValueInWeiFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Erc20Builder::Erc20Builder()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_Jub_5fEthereum_2eproto::InitDefaultsErc20Builder();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:JUB.Proto.Ethereum.Erc20Builder)
}
Erc20Builder::Erc20Builder(const Erc20Builder& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  tokento_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.tokento().size() > 0) {
    tokento_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.tokento_);
  }
  tokenvalueinwei_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.tokenvalueinwei().size() > 0) {
    tokenvalueinwei_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.tokenvalueinwei_);
  }
  // @@protoc_insertion_point(copy_constructor:JUB.Proto.Ethereum.Erc20Builder)
}

void Erc20Builder::SharedCtor() {
  tokento_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  tokenvalueinwei_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

Erc20Builder::~Erc20Builder() {
  // @@protoc_insertion_point(destructor:JUB.Proto.Ethereum.Erc20Builder)
  SharedDtor();
}

void Erc20Builder::SharedDtor() {
  tokento_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  tokenvalueinwei_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void Erc20Builder::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Erc20Builder::descriptor() {
  ::protobuf_Jub_5fEthereum_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Jub_5fEthereum_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Erc20Builder& Erc20Builder::default_instance() {
  ::protobuf_Jub_5fEthereum_2eproto::InitDefaultsErc20Builder();
  return *internal_default_instance();
}

Erc20Builder* Erc20Builder::New(::google::protobuf::Arena* arena) const {
  Erc20Builder* n = new Erc20Builder;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Erc20Builder::Clear() {
// @@protoc_insertion_point(message_clear_start:JUB.Proto.Ethereum.Erc20Builder)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  tokento_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  tokenvalueinwei_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

bool Erc20Builder::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:JUB.Proto.Ethereum.Erc20Builder)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string tokenTo = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_tokento()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->tokento().data(), static_cast<int>(this->tokento().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "JUB.Proto.Ethereum.Erc20Builder.tokenTo"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string tokenValueInWei = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_tokenvalueinwei()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->tokenvalueinwei().data(), static_cast<int>(this->tokenvalueinwei().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "JUB.Proto.Ethereum.Erc20Builder.tokenValueInWei"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:JUB.Proto.Ethereum.Erc20Builder)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:JUB.Proto.Ethereum.Erc20Builder)
  return false;
#undef DO_
}

void Erc20Builder::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:JUB.Proto.Ethereum.Erc20Builder)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string tokenTo = 1;
  if (this->tokento().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->tokento().data(), static_cast<int>(this->tokento().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "JUB.Proto.Ethereum.Erc20Builder.tokenTo");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->tokento(), output);
  }

  // string tokenValueInWei = 2;
  if (this->tokenvalueinwei().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->tokenvalueinwei().data(), static_cast<int>(this->tokenvalueinwei().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "JUB.Proto.Ethereum.Erc20Builder.tokenValueInWei");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->tokenvalueinwei(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:JUB.Proto.Ethereum.Erc20Builder)
}

::google::protobuf::uint8* Erc20Builder::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:JUB.Proto.Ethereum.Erc20Builder)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string tokenTo = 1;
  if (this->tokento().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->tokento().data(), static_cast<int>(this->tokento().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "JUB.Proto.Ethereum.Erc20Builder.tokenTo");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->tokento(), target);
  }

  // string tokenValueInWei = 2;
  if (this->tokenvalueinwei().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->tokenvalueinwei().data(), static_cast<int>(this->tokenvalueinwei().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "JUB.Proto.Ethereum.Erc20Builder.tokenValueInWei");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->tokenvalueinwei(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:JUB.Proto.Ethereum.Erc20Builder)
  return target;
}

size_t Erc20Builder::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:JUB.Proto.Ethereum.Erc20Builder)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string tokenTo = 1;
  if (this->tokento().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->tokento());
  }

  // string tokenValueInWei = 2;
  if (this->tokenvalueinwei().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->tokenvalueinwei());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Erc20Builder::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:JUB.Proto.Ethereum.Erc20Builder)
  GOOGLE_DCHECK_NE(&from, this);
  const Erc20Builder* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Erc20Builder>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:JUB.Proto.Ethereum.Erc20Builder)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:JUB.Proto.Ethereum.Erc20Builder)
    MergeFrom(*source);
  }
}

void Erc20Builder::MergeFrom(const Erc20Builder& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:JUB.Proto.Ethereum.Erc20Builder)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.tokento().size() > 0) {

    tokento_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.tokento_);
  }
  if (from.tokenvalueinwei().size() > 0) {

    tokenvalueinwei_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.tokenvalueinwei_);
  }
}

void Erc20Builder::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:JUB.Proto.Ethereum.Erc20Builder)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Erc20Builder::CopyFrom(const Erc20Builder& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:JUB.Proto.Ethereum.Erc20Builder)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Erc20Builder::IsInitialized() const {
  return true;
}

void Erc20Builder::Swap(Erc20Builder* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Erc20Builder::InternalSwap(Erc20Builder* other) {
  using std::swap;
  tokento_.Swap(&other->tokento_);
  tokenvalueinwei_.Swap(&other->tokenvalueinwei_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Erc20Builder::GetMetadata() const {
  protobuf_Jub_5fEthereum_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Jub_5fEthereum_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void TransactionETH::InitAsDefaultInstance() {
  ::JUB::Proto::Ethereum::_TransactionETH_default_instance_._instance.get_mutable()->path_ = const_cast< ::JUB::Proto::Common::Bip32Path*>(
      ::JUB::Proto::Common::Bip32Path::internal_default_instance());
}
void TransactionETH::clear_path() {
  if (GetArenaNoVirtual() == NULL && path_ != NULL) {
    delete path_;
  }
  path_ = NULL;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int TransactionETH::kPathFieldNumber;
const int TransactionETH::kNonceFieldNumber;
const int TransactionETH::kGasLimitFieldNumber;
const int TransactionETH::kGasPriceInWeiFieldNumber;
const int TransactionETH::kToFieldNumber;
const int TransactionETH::kValueInWeiFieldNumber;
const int TransactionETH::kInputFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

TransactionETH::TransactionETH()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_Jub_5fEthereum_2eproto::InitDefaultsTransactionETH();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:JUB.Proto.Ethereum.TransactionETH)
}
TransactionETH::TransactionETH(const TransactionETH& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  gaspriceinwei_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.gaspriceinwei().size() > 0) {
    gaspriceinwei_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.gaspriceinwei_);
  }
  to_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.to().size() > 0) {
    to_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.to_);
  }
  valueinwei_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.valueinwei().size() > 0) {
    valueinwei_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.valueinwei_);
  }
  input_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.input().size() > 0) {
    input_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.input_);
  }
  if (from.has_path()) {
    path_ = new ::JUB::Proto::Common::Bip32Path(*from.path_);
  } else {
    path_ = NULL;
  }
  ::memcpy(&nonce_, &from.nonce_,
    static_cast<size_t>(reinterpret_cast<char*>(&gaslimit_) -
    reinterpret_cast<char*>(&nonce_)) + sizeof(gaslimit_));
  // @@protoc_insertion_point(copy_constructor:JUB.Proto.Ethereum.TransactionETH)
}

void TransactionETH::SharedCtor() {
  gaspriceinwei_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  to_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  valueinwei_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  input_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&path_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&gaslimit_) -
      reinterpret_cast<char*>(&path_)) + sizeof(gaslimit_));
  _cached_size_ = 0;
}

TransactionETH::~TransactionETH() {
  // @@protoc_insertion_point(destructor:JUB.Proto.Ethereum.TransactionETH)
  SharedDtor();
}

void TransactionETH::SharedDtor() {
  gaspriceinwei_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  to_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  valueinwei_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  input_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete path_;
}

void TransactionETH::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TransactionETH::descriptor() {
  ::protobuf_Jub_5fEthereum_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Jub_5fEthereum_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const TransactionETH& TransactionETH::default_instance() {
  ::protobuf_Jub_5fEthereum_2eproto::InitDefaultsTransactionETH();
  return *internal_default_instance();
}

TransactionETH* TransactionETH::New(::google::protobuf::Arena* arena) const {
  TransactionETH* n = new TransactionETH;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void TransactionETH::Clear() {
// @@protoc_insertion_point(message_clear_start:JUB.Proto.Ethereum.TransactionETH)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  gaspriceinwei_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  to_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  valueinwei_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  input_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == NULL && path_ != NULL) {
    delete path_;
  }
  path_ = NULL;
  ::memset(&nonce_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&gaslimit_) -
      reinterpret_cast<char*>(&nonce_)) + sizeof(gaslimit_));
  _internal_metadata_.Clear();
}

bool TransactionETH::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:JUB.Proto.Ethereum.TransactionETH)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .JUB.Proto.Common.Bip32Path path = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_path()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 nonce = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &nonce_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 gasLimit = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &gaslimit_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string gasPriceInWei = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_gaspriceinwei()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->gaspriceinwei().data(), static_cast<int>(this->gaspriceinwei().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "JUB.Proto.Ethereum.TransactionETH.gasPriceInWei"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string to = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_to()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->to().data(), static_cast<int>(this->to().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "JUB.Proto.Ethereum.TransactionETH.to"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string valueInWei = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u /* 50 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_valueinwei()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->valueinwei().data(), static_cast<int>(this->valueinwei().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "JUB.Proto.Ethereum.TransactionETH.valueInWei"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string input = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(58u /* 58 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_input()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->input().data(), static_cast<int>(this->input().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "JUB.Proto.Ethereum.TransactionETH.input"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:JUB.Proto.Ethereum.TransactionETH)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:JUB.Proto.Ethereum.TransactionETH)
  return false;
#undef DO_
}

void TransactionETH::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:JUB.Proto.Ethereum.TransactionETH)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .JUB.Proto.Common.Bip32Path path = 1;
  if (this->has_path()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->path_, output);
  }

  // uint32 nonce = 2;
  if (this->nonce() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->nonce(), output);
  }

  // uint32 gasLimit = 3;
  if (this->gaslimit() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->gaslimit(), output);
  }

  // string gasPriceInWei = 4;
  if (this->gaspriceinwei().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->gaspriceinwei().data(), static_cast<int>(this->gaspriceinwei().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "JUB.Proto.Ethereum.TransactionETH.gasPriceInWei");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->gaspriceinwei(), output);
  }

  // string to = 5;
  if (this->to().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->to().data(), static_cast<int>(this->to().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "JUB.Proto.Ethereum.TransactionETH.to");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      5, this->to(), output);
  }

  // string valueInWei = 6;
  if (this->valueinwei().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->valueinwei().data(), static_cast<int>(this->valueinwei().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "JUB.Proto.Ethereum.TransactionETH.valueInWei");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      6, this->valueinwei(), output);
  }

  // string input = 7;
  if (this->input().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->input().data(), static_cast<int>(this->input().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "JUB.Proto.Ethereum.TransactionETH.input");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      7, this->input(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:JUB.Proto.Ethereum.TransactionETH)
}

::google::protobuf::uint8* TransactionETH::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:JUB.Proto.Ethereum.TransactionETH)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .JUB.Proto.Common.Bip32Path path = 1;
  if (this->has_path()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, *this->path_, deterministic, target);
  }

  // uint32 nonce = 2;
  if (this->nonce() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->nonce(), target);
  }

  // uint32 gasLimit = 3;
  if (this->gaslimit() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->gaslimit(), target);
  }

  // string gasPriceInWei = 4;
  if (this->gaspriceinwei().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->gaspriceinwei().data(), static_cast<int>(this->gaspriceinwei().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "JUB.Proto.Ethereum.TransactionETH.gasPriceInWei");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->gaspriceinwei(), target);
  }

  // string to = 5;
  if (this->to().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->to().data(), static_cast<int>(this->to().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "JUB.Proto.Ethereum.TransactionETH.to");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        5, this->to(), target);
  }

  // string valueInWei = 6;
  if (this->valueinwei().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->valueinwei().data(), static_cast<int>(this->valueinwei().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "JUB.Proto.Ethereum.TransactionETH.valueInWei");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        6, this->valueinwei(), target);
  }

  // string input = 7;
  if (this->input().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->input().data(), static_cast<int>(this->input().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "JUB.Proto.Ethereum.TransactionETH.input");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        7, this->input(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:JUB.Proto.Ethereum.TransactionETH)
  return target;
}

size_t TransactionETH::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:JUB.Proto.Ethereum.TransactionETH)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string gasPriceInWei = 4;
  if (this->gaspriceinwei().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->gaspriceinwei());
  }

  // string to = 5;
  if (this->to().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->to());
  }

  // string valueInWei = 6;
  if (this->valueinwei().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->valueinwei());
  }

  // string input = 7;
  if (this->input().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->input());
  }

  // .JUB.Proto.Common.Bip32Path path = 1;
  if (this->has_path()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->path_);
  }

  // uint32 nonce = 2;
  if (this->nonce() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->nonce());
  }

  // uint32 gasLimit = 3;
  if (this->gaslimit() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->gaslimit());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TransactionETH::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:JUB.Proto.Ethereum.TransactionETH)
  GOOGLE_DCHECK_NE(&from, this);
  const TransactionETH* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const TransactionETH>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:JUB.Proto.Ethereum.TransactionETH)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:JUB.Proto.Ethereum.TransactionETH)
    MergeFrom(*source);
  }
}

void TransactionETH::MergeFrom(const TransactionETH& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:JUB.Proto.Ethereum.TransactionETH)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.gaspriceinwei().size() > 0) {

    gaspriceinwei_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.gaspriceinwei_);
  }
  if (from.to().size() > 0) {

    to_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.to_);
  }
  if (from.valueinwei().size() > 0) {

    valueinwei_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.valueinwei_);
  }
  if (from.input().size() > 0) {

    input_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.input_);
  }
  if (from.has_path()) {
    mutable_path()->::JUB::Proto::Common::Bip32Path::MergeFrom(from.path());
  }
  if (from.nonce() != 0) {
    set_nonce(from.nonce());
  }
  if (from.gaslimit() != 0) {
    set_gaslimit(from.gaslimit());
  }
}

void TransactionETH::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:JUB.Proto.Ethereum.TransactionETH)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TransactionETH::CopyFrom(const TransactionETH& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:JUB.Proto.Ethereum.TransactionETH)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TransactionETH::IsInitialized() const {
  return true;
}

void TransactionETH::Swap(TransactionETH* other) {
  if (other == this) return;
  InternalSwap(other);
}
void TransactionETH::InternalSwap(TransactionETH* other) {
  using std::swap;
  gaspriceinwei_.Swap(&other->gaspriceinwei_);
  to_.Swap(&other->to_);
  valueinwei_.Swap(&other->valueinwei_);
  input_.Swap(&other->input_);
  swap(path_, other->path_);
  swap(nonce_, other->nonce_);
  swap(gaslimit_, other->gaslimit_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata TransactionETH::GetMetadata() const {
  protobuf_Jub_5fEthereum_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Jub_5fEthereum_2eproto::file_level_metadata[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace Ethereum
}  // namespace Proto
}  // namespace JUB

// @@protoc_insertion_point(global_scope)

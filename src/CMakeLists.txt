cmake_minimum_required(VERSION 3.6.0)


if(devOnly)

#ADD_LIBRARY(JUB_SDK STATIC ${SRC_LIST})
list(APPEND SRC_LIST ${CMAKE_CURRENT_SOURCE_DIR}/JUB_SDK_DEV.cpp)
list(APPEND SRC_LIST ${CMAKE_CURRENT_SOURCE_DIR}/JUB_SDK_DEV_HID.cpp)
aux_source_directory(${CMAKE_CURRENT_SOURCE_DIR}/utility SRC_LIST)
list(APPEND SRC_LIST ${CMAKE_CURRENT_SOURCE_DIR}/context/BaseContext.cpp)
list(APPEND SRC_LIST ${CMAKE_CURRENT_SOURCE_DIR}/device/JubiterHidDevice.cpp)
list(APPEND SRC_LIST ${CMAKE_CURRENT_SOURCE_DIR}/token/JubiterBladeToken.cpp)


list(APPEND SRC_LIST ${CMAKE_CURRENT_SOURCE_DIR}/../include/JUB_SDK_DEV.h)
list(APPEND SRC_LIST ${CMAKE_CURRENT_SOURCE_DIR}/../include/JUB_SDK_DEV_HID.h)
list(APPEND SRC_LIST ${CMAKE_CURRENT_SOURCE_DIR}/../include/device/JubiterHidDevice.hpp)
list(APPEND SRC_LIST ${CMAKE_CURRENT_SOURCE_DIR}/../include/token/interface/BaseToken.h)
list(APPEND SRC_LIST ${CMAKE_CURRENT_SOURCE_DIR}/../include/token/JubiterBlade/JubiterBladeToken.h)

include_directories(${CMAKE_CURRENT_SOURCE_DIR}/../include)
include_directories(${CMAKE_CURRENT_SOURCE_DIR}/../deps)
include_directories(${CMAKE_CURRENT_SOURCE_DIR}/../deps/TrustWallet/wallet-core/include)
include_directories(${CMAKE_CURRENT_SOURCE_DIR}/../deps/TrustWallet/wallet-core/src)
include_directories(${CMAKE_CURRENT_SOURCE_DIR}/../deps/TrustWallet/wallet-core/src/interface)
include_directories(${CMAKE_CURRENT_SOURCE_DIR}/../trezor-crypto/include)
include_directories(${CMAKE_CURRENT_SOURCE_DIR}/../deps/json/include)

else()  #if(devOnly)

aux_source_directory(${CMAKE_CURRENT_SOURCE_DIR}/ SRC_LIST)
aux_source_directory(${CMAKE_CURRENT_SOURCE_DIR}/utility SRC_LIST)
aux_source_directory(${CMAKE_CURRENT_SOURCE_DIR}/context SRC_LIST)

aux_source_directory(${CMAKE_CURRENT_SOURCE_DIR}/device SRC_LIST)
aux_source_directory(${CMAKE_CURRENT_SOURCE_DIR}/token SRC_LIST)
aux_source_directory(${CMAKE_CURRENT_SOURCE_DIR}/token/BTC SRC_LIST)
aux_source_directory(${CMAKE_CURRENT_SOURCE_DIR}/token/ETH SRC_LIST)
aux_source_directory(${CMAKE_CURRENT_SOURCE_DIR}/token/EOS SRC_LIST)
aux_source_directory(${CMAKE_CURRENT_SOURCE_DIR}/token/HC SRC_LIST)
aux_source_directory(${CMAKE_CURRENT_SOURCE_DIR}/token/XRP SRC_LIST)
aux_source_directory(${CMAKE_CURRENT_SOURCE_DIR}/HDKey SRC_LIST)
aux_source_directory(${CMAKE_CURRENT_SOURCE_DIR}/../deps/bigint SRC_LIST)
aux_source_directory(${CMAKE_CURRENT_SOURCE_DIR}/../deps/bleTransmit SRC_LIST)
aux_source_directory(${CMAKE_CURRENT_SOURCE_DIR}/../deps/TrustWallet/wallet-core/src SRC_LIST)
aux_source_directory(${CMAKE_CURRENT_SOURCE_DIR}/../deps/TrustWallet/wallet-core/src/interface SRC_LIST)
aux_source_directory(${CMAKE_CURRENT_SOURCE_DIR}/../deps/TrustWallet/wallet-core/src/Bitcoin SRC_LIST)
aux_source_directory(${CMAKE_CURRENT_SOURCE_DIR}/../deps/TrustWallet/wallet-core/src/Bravo SRC_LIST)
aux_source_directory(${CMAKE_CURRENT_SOURCE_DIR}/../deps/TrustWallet/wallet-core/src/EOS SRC_LIST)
aux_source_directory(${CMAKE_CURRENT_SOURCE_DIR}/../deps/TrustWallet/wallet-core/src/Ethereum SRC_LIST)
aux_source_directory(${CMAKE_CURRENT_SOURCE_DIR}/../deps/TrustWallet/wallet-core/src/Ripple SRC_LIST)

include_directories(${CMAKE_CURRENT_SOURCE_DIR}/../include)
include_directories(${CMAKE_CURRENT_SOURCE_DIR}/../deps)
if(IOS)
include_directories(${CMAKE_CURRENT_SOURCE_DIR}/../deps/bleTransmit/ios)
elseif(ANDROID)
include_directories(${CMAKE_CURRENT_SOURCE_DIR}/../deps/bleTransmit/android)
endif() #if(IOS)
include_directories(${CMAKE_CURRENT_SOURCE_DIR}/../deps/bigint)
include_directories(${CMAKE_CURRENT_SOURCE_DIR}/../deps/json/include)
include_directories(${CMAKE_CURRENT_SOURCE_DIR}/../deps/TrustWallet/wallet-core/include)
include_directories(${CMAKE_CURRENT_SOURCE_DIR}/../deps/TrustWallet/wallet-core/include/TrustWalletCore)
include_directories(${CMAKE_CURRENT_SOURCE_DIR}/../deps/TrustWallet/wallet-core/src)
include_directories(${CMAKE_CURRENT_SOURCE_DIR}/../deps/TrustWallet/wallet-core/src/Bitcoin)
include_directories(${CMAKE_CURRENT_SOURCE_DIR}/../deps/TrustWallet/wallet-core/src/Bravo)
include_directories(${CMAKE_CURRENT_SOURCE_DIR}/../deps/TrustWallet/wallet-core/src/EOS)
include_directories(${CMAKE_CURRENT_SOURCE_DIR}/../deps/TrustWallet/wallet-core/src/Ethereum)
include_directories(${CMAKE_CURRENT_SOURCE_DIR}/../deps/TrustWallet/wallet-core/src/interface)
include_directories(${CMAKE_CURRENT_SOURCE_DIR}/../deps/TrustWallet/wallet-core/src/Ripple)
include_directories(${CMAKE_CURRENT_SOURCE_DIR}/../deps/TrustWallet/wallet-core)
include_directories(${CMAKE_CURRENT_SOURCE_DIR}/../trezor-crypto/include)

endif() #if(devOnly)

ADD_LIBRARY(JUB_SDK STATIC ${SRC_LIST})

# test endian.h
find_path(ENDIAN_PATH endian.h)
find_path(SYS_ENDIAN_PATH sys/endian.h)

if(ENDIAN_PATH)
    message("ENDIAN_PATH = ${ENDIAN_PATH}")
    target_compile_definitions(JUB_SDK PRIVATE HAVE_ENDIAN_H=1)
elseif(SYS_ENDIAN_PATH)
    message("SYS_ENDIAN_PATH = ${SYS_ENDIAN_PATH}")
    target_compile_definitions(JUB_SDK PRIVATE HAVE_SYS_ENDIAN_H=1)
endif() #if(ENDIAN_PATH)

#endif() #if(devOnly)
